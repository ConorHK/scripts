#!/usr/bin/env python

# notify with command result using ntfy

# Override success and failure priorities by inline setting env variables
import sys
from os import getenv
from requests import post
from subprocess import CalledProcessError
from subprocess import run as subprocess_run


SUCCESS_PRIORITY = int(getenv("SUCCESS_PRIORITY", 3))
FAILURE_PRIORITY = int(getenv("FAILURE_PRIORITY", 4))


def _send_notification(command, error):
    url = getenv("NTFY_LINK")

    data = {
        "topic": url,
        "message": f"* {command} * completed with return code {error}",
        "title": "Command success",
        "priority": SUCCESS_PRIORITY,
    }

    if error:
        data["title"] = "Command failure"
        data["priority"] = FAILURE_PRIORITY
    post("https://ntfy.sh", json=data)


def _run_command(command):
    process = subprocess_run(command, shell=True)
    if process.returncode != 0:
        raise CalledProcessError(process.returncode, process.args)


def main():
    if not (1 <= SUCCESS_PRIORITY <= 5 and 1 <= FAILURE_PRIORITY <= 5):
        raise ValueError("Priority ranges between 1 (minimum) and 5 (maximum)")

    command = " ".join(sys.argv[1:])
    try:
        _run_command(command)
        _send_notification(command, 0)
    except CalledProcessError as exc:
        _send_notification(command, exc.returncode)


if __name__ == "__main__":
    main()
